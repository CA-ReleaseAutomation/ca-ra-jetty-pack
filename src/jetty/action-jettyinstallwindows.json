{
   "SCRIPTAction" : {
      "actionPack" : {
         "name" : "Jetty",
         "category" : "Jetty",
         "description" : "Integration actions for the Jetty embeddable web server.  More information on Jetty available at jetty.apache.org.",
         "author" : "CA Technologies",
         "dependencies" : "",
         "platform" : "Windows and Linux",
         "version" : "0.1  ",
         "license" : "",
         "imageLocation" : "http://localhost:8080/RDKServer/workingDirectory/ActionPacks/jetty/jetty-logo-80x22.png",
         "lastModified" : "2014-11-05T00:41:52.084-08:00",
         "tags" : [ ],
         "packageName" : "jetty"
      },
      "name" : "Jetty - Install - Windows",
      "description" : "Install Jetty on a target Windows system by providing the location of the Jetty download as a zip file and the destination installation folder.",
      "inputParamList" : [ {
         "name" : "URL",
         "type" : "String",
         "description" : "The URL of the zip file to download and install on a Windows system.",
         "required" : false,
         "variableName" : "url",
         "arrayOption" : false
      }, {
         "name" : "Zip File",
         "type" : "String",
         "description" : "The target name of the zip file to save.",
         "required" : false,
         "variableName" : "zipfile",
         "arrayOption" : false
      }, {
         "name" : "Installation Directory",
         "type" : "String",
         "description" : "The directory to install Jetty on to.",
         "required" : false,
         "variableName" : "installationdirectory",
         "arrayOption" : false
      }, {
         "name" : "Log",
         "type" : "String",
         "description" : "The name of the log file to use for this action.",
         "required" : false,
         "variableName" : "log",
         "arrayOption" : false
      } ],
      "outputParamList" : [ {
         "name" : "Execution Output",
         "type" : "String",
         "description" : "Standard out from the command execution.",
         "filterValue" : "[\\s\\S]*",
         "filterType" : "REGEX",
         "variableName" : "executionoutput",
         "source" : "standardOut",
         "arrayOption" : false
      } ],
      "type" : "SCRIPT",
      "complete" : true,
      "lastModified" : "2014-11-05T00:41:56.444-08:00",
      "className" : "JettyInstallWindows",
      "packageName" : "com.ca.jetty",
      "shellType" : "POWERSHELL",
      "powerShellScript" : {
         "content" : "###########################################################\n# AUTHOR  : Andrii Dziuba\n# DATE    : 2014-03-07\n# COMMENT : Download and extract jetty archive\n# NAME    : Install Jetty\n###########################################################\n \n#ERROR REPORTING ALL\nSet-StrictMode -Version latest\n \n#---------------------------------------------------------- \n#STATIC VARIABLES\n#----------------------------------------------------------\n$dest   = \"${Installation Directory}\"\n$zips   = \"${Zip File}\"\n$url = \"${URL}\"\n$outLog = \"${Log}\"\n\nfunction logF($msg)\n{\n\tWrite-Host $msg \n\t$msg >> $outLog\n}\n\nFunction DownloadURL\n{\t\n\tlogF -Msg \"please wait file is downloading...\"\n\t$wc = New-Object System.Net.WebClient\n\t$wc.DownloadFile($url, $zips)\n\tlogF -Msg \"downloaded file: $zips , from: $url\"\n}\n\nfunction ExpandZIPFile($file, $destination)\n{\n\t$shell = new-object -com shell.application\n\t$zip = $shell.NameSpace($file)\n\tforeach($item in $zip.items())\n\t{\n\t\t$shell.Namespace($destination).copyhere($item)\t\n\t}\n}\n\nFunction DeleteNotNeededFiles\n{\n\tRemove-Item $zips\n\tlogF -Msg \"File:$zips is deleted\"\n}\n \nFunction RunAll\n{\n\tlogF -Msg \"Dest: $dest\"\n    logF -Msg \"Zip: $zips\"\n    logF -Msg \"URL: $url\"\n    logF -Msg \"OutLog: $outLog\"\n\n\tDownloadURL\n\tExpandZIPFile -File $zips -Destination $dest\n\tDeleteNotNeededFiles\n}\n\n#RUN SCRIPT\nRunAll\n\"Done, Thank You\"",
         "execDir" : "",
         "location" : "",
         "name" : "",
         "overwriteOutput" : false,
         "timeout" : 0,
         "waitForProcess" : false,
         "executionTimeout" : 400,
         "expectedReturnCode" : 0,
         "options" : [ {
         } ]
      }
   }
}